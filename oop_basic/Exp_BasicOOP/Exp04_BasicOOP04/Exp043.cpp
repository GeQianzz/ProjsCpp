#include <iostream>
#include <cmath>

using namespace std;

// ???????Shape
class Shape {
public:
    virtual double area() const = 0;  // ???????????????
    virtual ~Shape() {}  // ??????????
};

// ?????Circle
class Circle : public Shape {
private:
    double radius;  // ??

public:
    Circle(double r) : radius(r) {}

    double area() const override {
        return M_PI * radius * radius;  // ?????????????r^2
    }
};

// ????????Square
class Square : public Shape {
private:
    double side;  // ???

public:
    Square(double s) : side(s) {}

    double area() const override {
        return side * side;  // ???????????????s^2
    }
};

// ??????Rectangle
class Rectangle : public Shape {
private:
    double length;  // ??
    double width;   // ??

public:
    Rectangle(double l, double w) : length(l), width(w) {}

    double area() const override {
        return length * width;  // ??????????????? * ??
    }
};

// ??????Trapezoid
class Trapezoid : public Shape {
private:
    double a, b, h;  // ??????????

public:
    Trapezoid(double a1, double b1, double h1) : a(a1), b(b1), h(h1) {}

    double area() const override {
        return 0.5 * (a + b) * h;  // ?????????????0.5 * (??? + ???) * ??
    }
};

// ????????Triangle
class Triangle : public Shape {
private:
    double base, height;  // ?????

public:
    Triangle(double b, double h) : base(b), height(h) {}

    double area() const override {
        return 0.5 * base * height;  // ???????????????0.5 * ??? * ??
    }
};

int main() {
    // ?????????????????????????????????
    Shape* shapes[5];
    
    // ????????????????????????
    shapes[0] = new Circle(5.0);        // ???5???
    shapes[1] = new Square(4.0);        // ????4????????
    shapes[2] = new Rectangle(6.0, 3.0); // ??6??3?????
    shapes[3] = new Trapezoid(4.0, 6.0, 3.0); // ???4?????6????3??????
    shapes[4] = new Triangle(4.0, 3.0); // ???4????3????????

    double totalArea = 0.0;

    // ????????????????????????????????????
    for (int i = 0; i < 5; ++i) {
        totalArea += shapes[i]->area();
    }

    // ????????
    cout << "???????????????: " << totalArea << endl;

    // ?????????????
    for (int i = 0; i < 5; ++i) {
        delete shapes[i];
    }

    return 0;
}
